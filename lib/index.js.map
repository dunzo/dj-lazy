{"version":3,"sources":["../src/index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["\n\nimport open from 'open';\nimport Xray from 'x-ray';\nimport SpotifyWebApi from 'spotify-web-api-node';\nimport express from 'express';\nimport Q from 'q';\nimport cliOptions from 'commander';\n\n// Get command line args\ncliOptions\n.option('-m, --max', 'The max number of albums to add')\n.option('-s, --status', 'The playlist status (public, private)')\n.parse(process.argv);\n\nconst store = {\n\tuserId: '',\n\tplaylistId: '',\n\tscrapedAlbums: [],\n\talbumsSuccess: []\n};\n\nconst config = {\n\tscopes       : ['playlist-modify-public', 'playlist-modify-private'],\n\tredirectPath : '/spotify-auth',\n\tport         : 8085\n};\n\nconst clientId = process.env.DJ_LAZY_CLIENT_ID;\nconst clientSecret = process.env.DJ_LAZY_CLIENT_SECRET;\nconst redirectUri = `http://localhost:${config.port}${config.redirectPath}`;\n\nif (!clientId || !clientSecret) {\n\tconst err = new Error('Missing cliendId or clientSecret\\nEnsure you have DJ_LAZY_CLIENT_ID and DJ_LAZY_CLIENT_SECRET set as ENV variables');\n\tthrow err;\n}\n\n// Create Spotify API wrapper\nconst spotifyApi = new SpotifyWebApi({clientId, clientSecret, redirectUri});\n\n// Create the authorization URL\nconst authorizeURL = spotifyApi.createAuthorizeURL(config.scopes, 'mystate');\n\nif (authToken) {\n\tstartScraping(authToken);\n} else {\n\tconst app = express();\n\tlet server;\n\n\tapp.get(config.redirectPath, (req, res) => {\n\t\t// console.log('Here is your authorization token, you can avoid this step when running this script in the future by saving this token in an environment variable named LAZY_DJ_SPOTIFY_AUTHORIZATION');\n\t\tauthToken = req.query.code;\n\t\t// console.log(authToken);\n\t\tres.send('<script>window.close();</script>');\n\t\tserver.close();\n\t\tstartScraping(authToken);\n\t});\n\n\tserver = app.listen(config.port, _ => console.log(`Server listening on port ${config.port}!\\n`) );\n\topen(authorizeURL);\n};\n\nconst authorize = (authToken) => {\n\treturn spotifyApi.authorizationCodeGrant(authToken);\n}\n\nconst setAccessToken = (data) => {\n\treturn spotifyApi.setAccessToken(data.body['access_token']);\n}\n\nconst fetchUser = _ => {\n\treturn spotifyApi.getMe();\n}\n\nconst createPlaylist = _ => {\n\tconst date = new Date();\n\tconst title = `DJ Lazy ${date.toLocaleDateString()}`;\n\tlet status = 'public'; \n\tif (cliOptions.status === 'private' || cliOptions.status === 'public') {\n\t\tstatus = cliOptions.status;\n\t}\n\treturn spotifyApi.createPlaylist(store.userId, title, {public: status == 'public'});\n}\n\nconst scrapeForAlbums = () => {\n\tvar deferred = Q.defer();\n\tconst x = Xray();\n\tx('http://www.allmusic.com/newreleases', \n\t\tx('.featured-rows .row .featured', [{\n\t\t\tartist: '.artist a:first-child',\n\t\t\ttitle: '.title a:first-child'\n\t\t}])\n\t)((err, data) => {\n\t\tif (err) {\n\t\t\tconsole.error('Error trying to scrape');\n\t\t\tthrow err;\n\t\t} else {\n\t\t\tdeferred.resolve(data);\n\t\t}\n\t});\n\treturn deferred.promise;\n}\n\nconst getAlbumsTracks = (albumIds) => {\n\treturn Q.all(albumIds.map(id => spotifyApi.getAlbumTracks(id) ));\n}\n\nfunction delay (delay) {\n\tvar q = Q.defer();\n\tsetTimeout(q.resolve.bind(q), delay);\n\treturn q.promise;\n}\n\nconst addTracksToPlaylist = (trackUris) => {\n\tlet defer = Q.defer();\n\tlet promise = defer.promise;\n\tfor (var i = 0; i < trackUris.length; i += 50) {\n\t\t(i => {\n\t\t\tconst endIndex = trackUris.length <= i + 50 ? trackUris.length : i + 50;\n\t\t\tpromise = promise.then(_ => spotifyApi.addTracksToPlaylist(store.userId, store.playlistId, trackUris.slice(i, endIndex)));\n\t\t\tpromise = promise.then(_ => delay(2000));\n\t\t})(i);\n\t}\n\tdefer.resolve();\n\treturn promise;\n}\n\nfunction startScraping(authToken) {\n\n\tauthorize(authToken)\n\t.then(setAccessToken)\n\t.then(fetchUser)\n\t.then(userData => {\n\t\tstore.userId = userData.body.id;\n\t\tconsole.log('Creating playlist...');\n\t\treturn createPlaylist();\n\t})\n\t.then(playlistData => {\n\t\tstore.playlistId = playlistData.body.id;\n\t\tconsole.log('Fetching albums from Allmusic...');\n\t\treturn scrapeForAlbums();\n\t})\n\t.then(scrapedAlbums => {\n\t\tstore.scrapedAlbums = scrapedAlbums;\n\t\tconsole.log('Searching Spotify...');\n\t\treturn Q.all(scrapedAlbums.map(album => {\n\t\t\treturn spotifyApi.searchAlbums(`album:${album.title} artist:${album.artist}`);\n\t\t}));\n\t})\n\t.then(spotifyAlbumResultsData => {\n\t\tconsole.log('Fetching tracks...');\n\t\tconst maxAlbums = cliOptions.max && parseInt(cliOptions.max);\n\t\tconst topMatchIds = spotifyAlbumResultsData.map((result, i) => {\n\t\t\tif (result.body.albums && result.body.albums.items && result.body.albums.items.length) {\n\t\t\t\tif (!maxAlbums || store.albumsSuccess.length < maxAlbums) {\n\t\t\t\t\tstore.albumsSuccess.push(store.scrapedAlbums[i]);\n\t\t\t\t\treturn result.body.albums.items[0].id;\n\t\t\t\t}\n\t\t\t}\n\t\t}).filter(id => !!id);\n\t\treturn getAlbumsTracks(topMatchIds);\n\t})\n\t.then(albumsTracksData => {\n\t\tconsole.log('Adding tracks to Spotify...');\n\t\tconst albumsTracksUris = albumsTracksData.map(result => {\n\t\t\treturn result.body.items.map(item => item.uri);\n\t\t});\n\t\tconst flatAlbumsTracksUris = [].concat.apply([], albumsTracksUris);\n\t\treturn addTracksToPlaylist(flatAlbumsTracksUris);\n\t})\n\t.then(data => {\n\t\tconsole.log('Finished!');\n\t\tconsole.log('Found Spotify Albums For');\n\t\tconsole.log('=========================');\n\t\tstore.albumsSuccess.map(a => console.log(`${a.title} by ${a.artist}`));\n\t\tprocess.exit();\n\t})\n\t.catch(function(err) {\n\t\tconsole.log('Something went wrong!', err);\n\t\tthrow err;\n\t});\n}"]}